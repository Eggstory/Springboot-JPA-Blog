# key: value    (value앞에 한칸띄우는게 규칙 / 들어쓰기는 스페이스바 2번)

server:
  port: 8888
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
      
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: cos
    password: 9963
    
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    #show-sql: true
    properties:
      hibernate.format_sql: true

# JPA/Hibernate naming 전략
# 1) ImplicitNamingStrategy : implicit-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
#    @Column, @Table의 name 속성으로 지정한 이름으로 매핑
#    attributeName 속성 이름이 별도 지정하지 않은 경우 "attributeName"으로 매핑

# 2) PhysicalNamingStrategy : physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#    특별하게 column name을 명시하였거나 암묵적으로 결정 되었는지에 관련 없이 적용
#    attr_name 처럼 별도 물리적 컬럼 이름으로 대신하게 할 수 있다.

# 3) 변수 이름 그대로 사용 : physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


  jackson:
    serialization:
      fail-on-empty-beans: true
      
cos:
  key: cos1234